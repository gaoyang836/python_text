RobotFramework 作业 4
自动化如下测试用例
 
用例：检查添加课程功能

前置条件：系统中没有课程，

步骤 1： 添加课程，输入课程名、详情描述、展示次序为2，点击创建
预期结果：创建的课程正确显示在下面的表中。

步骤 2： 再添加一门课程，输入课程名、详情描述、展示次序为1，点击创建
预期结果：创建的课程正确显示在下面的表中，并且按照展示次序排列。


这里为了简化，我们只检查 课程名就可以了

要求：
将用例中的 登录、添加课程、检查课程， 合理使用 资源文件里面的用户关键字  实现
如果可以，将初始化、清除操作 也改为用 用户关键字实现































RF测试套件文件 t1.robot
*** Settings ***
Library    Selenium2Library
Resource    rc2.robot
Suite Setup        Setup WebTest
Suite Teardown     TearDown WebTest


*** Test Cases ***
测试1
    [Setup]  DeleteAllCourse


    Login Web Site

    Add Course    初中数学    初中数学   1

    ${lessons}=  Get Course List

    Should Be True   $lessons==[u'初中数学']


    [Teardown]     DeleteAllCourse



测试2
    [Setup]  DeleteAllCourse


    Login Web Site

    Add Course    初中语文    初中语文   2

    ${lessons}=  Get Course List

    Should Be True   $lessons==[u'初中语文']


    [Teardown]     DeleteAllCourse
RF资源文件 rc.robot
*** Settings ***
Library    Selenium2Library
Library    Collections


*** Keywords ***

Setup WebTest
    Open Browser   http://localhost    chrome
    Set Selenium Implicit Wait   10

TearDown WebTest
    Close Browser


DeleteAllCourse

   Login Web Site

    Set Selenium Implicit Wait   2
    :For   ${one}  IN RANGE  99
       \   sleep  1
       \   ${html}=  Get Webelement  tag=html
       \   ${eles}=  Evaluate   $html.find_elements_by_css_selector("*[ng-click^='delOne']")
       \   Exit For Loop If   $eles==[]
       \   Click Element   @{eles}[0]
       \   Click Element   css=button.btn-primary
    Set Selenium Implicit Wait   10


Login Web Site
    Go To     http://localhost/mgr/login/login.html    chrome
    Set Selenium Implicit Wait   10

    Input Text   id=username   auto
    Input Text   id=password   sdfsdfsdf
    Click Button    tag=button


Add Course
    [Arguments]     ${name}      ${desc}    ${displayidx}
    Click Element   css=button[ng-click^=showAddOne]

    input text      css=input[ng-model='addData.name']    ${name}
    input text      css=textarea[ng-model='addData.desc']    ${desc}
    input text      css=input[ng-model='addData.display_idx']    ${displayidx}

    Click Element   css=button[ng-click^=addOne]

    sleep  2


Get Course List

    ${lessons}=   Create List
    ${eles}=   get webelements  css=tr>td:nth-child(2)
    :FOR   ${ele}   IN   @{eles}
    \      Append To List   ${lessons}    ${ele.text}

    [Return]   ${lessons}